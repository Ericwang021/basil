{"ast":null,"code":"var __jsx = React.createElement;\nimport avatarStyle from \"../../styles/components/avatar.module.scss\";\nimport styles from \"./Comment.module.scss\";\nimport React, { Fragment } from \"react\";\nimport CommentReply from \"../CommentReply/CommentReply\";\n\nvar Comment = function Comment(_ref) {\n  var discussionData = _ref.discussionData;\n  var _discussionData$recor = discussionData.record,\n      record = _discussionData$recor === void 0 ? {} : _discussionData$recor;\n  var _record$name = record.name,\n      name = _record$name === void 0 ? \"\" : _record$name,\n      _record$content = record.content,\n      content = _record$content === void 0 ? \"\" : _record$content,\n      _record$date = record.date,\n      date = _record$date === void 0 ? \"\" : _record$date,\n      _record$reply = record.reply,\n      reply = _record$reply === void 0 ? [] : _record$reply;\n  return __jsx(\"div\", {\n    className: styles.comment\n  }, name ? __jsx(\"div\", {\n    className: avatarStyle.avatarMl\n  }, name.substring(0, 1)) : null, __jsx(\"div\", {\n    className: styles.commentWrapper\n  }, __jsx(\"div\", {\n    className: styles.commentBox\n  }, __jsx(\"div\", {\n    className: styles.nameText\n  }, name ? __jsx(\"div\", null, name) : null, date ? __jsx(\"div\", null, date) : null)), content ? __jsx(Fragment, null, __jsx(\"div\", {\n    className: styles.commentBox\n  }, __jsx(\"span\", {\n    className: styles.commentContent\n  }, content), __jsx(\"div\", {\n    className: styles.rightContent\n  }, __jsx(\"span\", {\n    className: styles.lattice\n  }, \"+1\"), __jsx(\"span\", {\n    className: styles.number\n  }, \"0\"))), reply.map(function (replyItem, index) {\n    return __jsx(CommentReply, {\n      key: \"reply\".concat(index),\n      replyItem: replyItem,\n      index: index\n    });\n  })) : null));\n};\n\n_c = Comment;\nexport default Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["/Users/ericwang/Documents/workspace/basil/components/Comment/Comment.js"],"names":["avatarStyle","styles","React","Fragment","CommentReply","Comment","discussionData","record","name","content","date","reply","comment","avatarMl","substring","commentWrapper","commentBox","nameText","commentContent","rightContent","lattice","number","map","replyItem","index"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,4CAAxB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAwB;AAAA,MAArBC,cAAqB,QAArBA,cAAqB;AAAA,8BACfA,cADe,CAC/BC,MAD+B;AAAA,MAC/BA,MAD+B,sCACtB,EADsB;AAAA,qBAEoBA,MAFpB,CAE/BC,IAF+B;AAAA,MAE/BA,IAF+B,6BAExB,EAFwB;AAAA,wBAEoBD,MAFpB,CAEpBE,OAFoB;AAAA,MAEpBA,OAFoB,gCAEV,EAFU;AAAA,qBAEoBF,MAFpB,CAENG,IAFM;AAAA,MAENA,IAFM,6BAEC,EAFD;AAAA,sBAEoBH,MAFpB,CAEKI,KAFL;AAAA,MAEKA,KAFL,8BAEa,EAFb;AAIvC,SACC;AAAK,IAAA,SAAS,EAAEV,MAAM,CAACW;AAAvB,KACEJ,IAAI,GACJ;AAAK,IAAA,SAAS,EAAER,WAAW,CAACa;AAA5B,KAAuCL,IAAI,CAACM,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAAvC,CADI,GAED,IAHL,EAIC;AAAK,IAAA,SAAS,EAAEb,MAAM,CAACc;AAAvB,KACC;AAAK,IAAA,SAAS,EAAEd,MAAM,CAACe;AAAvB,KACC;AAAK,IAAA,SAAS,EAAEf,MAAM,CAACgB;AAAvB,KACET,IAAI,GAAG,mBAAMA,IAAN,CAAH,GAAuB,IAD7B,EAEEE,IAAI,GAAG,mBAAMA,IAAN,CAAH,GAAuB,IAF7B,CADD,CADD,EAOED,OAAO,GACP,MAAC,QAAD,QACC;AAAK,IAAA,SAAS,EAAER,MAAM,CAACe;AAAvB,KACC;AAAM,IAAA,SAAS,EAAEf,MAAM,CAACiB;AAAxB,KAAyCT,OAAzC,CADD,EAEC;AAAK,IAAA,SAAS,EAAER,MAAM,CAACkB;AAAvB,KACC;AAAM,IAAA,SAAS,EAAElB,MAAM,CAACmB;AAAxB,UADD,EAEC;AAAM,IAAA,SAAS,EAAEnB,MAAM,CAACoB;AAAxB,SAFD,CAFD,CADD,EAQEV,KAAK,CAACW,GAAN,CAAU,UAACC,SAAD,EAAYC,KAAZ,EAAsB;AAChC,WACC,MAAC,YAAD;AACC,MAAA,GAAG,iBAAUA,KAAV,CADJ;AAEC,MAAA,SAAS,EAAED,SAFZ;AAGC,MAAA,KAAK,EAAEC;AAHR,MADD;AAOA,GARA,CARF,CADO,GAmBJ,IA1BL,CAJD,CADD;AAmCA,CAvCD;;KAAMnB,O;AAyCN,eAAeA,OAAf","sourcesContent":["import avatarStyle from \"../../styles/components/avatar.module.scss\";\nimport styles from \"./Comment.module.scss\";\nimport React, { Fragment } from \"react\";\nimport CommentReply from \"../CommentReply/CommentReply\";\n\nconst Comment = ({ discussionData }) => {\n\tconst { record = {} } = discussionData;\n\tconst { name = \"\", content = \"\", date = \"\", reply = [] } = record;\n\n\treturn (\n\t\t<div className={styles.comment}>\n\t\t\t{name ? (\n\t\t\t\t<div className={avatarStyle.avatarMl}>{name.substring(0, 1)}</div>\n\t\t\t) : null}\n\t\t\t<div className={styles.commentWrapper}>\n\t\t\t\t<div className={styles.commentBox}>\n\t\t\t\t\t<div className={styles.nameText}>\n\t\t\t\t\t\t{name ? <div>{name}</div> : null}\n\t\t\t\t\t\t{date ? <div>{date}</div> : null}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{content ? (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<div className={styles.commentBox}>\n\t\t\t\t\t\t\t<span className={styles.commentContent}>{content}</span>\n\t\t\t\t\t\t\t<div className={styles.rightContent}>\n\t\t\t\t\t\t\t\t<span className={styles.lattice}>+1</span>\n\t\t\t\t\t\t\t\t<span className={styles.number}>0</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{reply.map((replyItem, index) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<CommentReply\n\t\t\t\t\t\t\t\t\tkey={`reply${index}`}\n\t\t\t\t\t\t\t\t\treplyItem={replyItem}\n\t\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</Fragment>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Comment;\n"]},"metadata":{},"sourceType":"module"}