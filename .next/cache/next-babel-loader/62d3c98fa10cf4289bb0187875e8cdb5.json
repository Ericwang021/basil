{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport buttonStyles from \"../../styles/components/buttons.module.scss\";\nimport styles from \"./VideoBox.module.scss\";\nimport React from \"react\";\nimport ClosedCaptionIcon from \"@material-ui/icons/ClosedCaption\";\nimport CropFreeIcon from \"@material-ui/icons/CropFree\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport ReactPlayer from \"react-player/lazy\";\nimport VolumeDown from \"@material-ui/icons/VolumeDown\";\nimport VolumeUp from \"@material-ui/icons/VolumeUp\";\nimport { Grid, IconButton, Slider } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nvar VideoBox = function VideoBox() {\n  _s();\n\n  var _useState = useState(100),\n      _useState2 = _slicedToArray(_useState, 2),\n      SliderValue = _useState2[0],\n      setSliderValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      unFold = _useState4[0],\n      setUnfold = _useState4[1];\n\n  var useStyles = makeStyles(function (theme) {\n    return {\n      root: {\n        \"& > svg\": {\n          color: \"#fff\"\n        }\n      }\n    };\n  });\n  var classes = useStyles();\n\n  var handleChange = function handleChange(newValue) {\n    setSliderValue(newValue);\n  };\n\n  var handleOnMouseOver = function handleOnMouseOver() {\n    setUnfold(!unFold);\n  };\n\n  return __jsx(\"div\", {\n    className: styles.videoWrapper\n  }, __jsx(\"div\", {\n    className: \"videoPlayBox\"\n  }, __jsx(ReactPlayer, {\n    url: \"https://youtu.be/xjadNS2HBpM\",\n    className: \"player\",\n    width: \"100%\",\n    height: 500,\n    autoPlay: false,\n    controls: true,\n    volume: 1,\n    muted: false\n  })), __jsx(\"div\", {\n    className: styles.playController\n  }, __jsx(\"div\", {\n    className: styles.playAndVolume\n  }, __jsx(Grid, {\n    item: true,\n    xs: true\n  }, __jsx(IconButton, {\n    className: buttonStyles.IconButtonLg\n  }, __jsx(PlayArrowIcon, {\n    className: classes,\n    fontSize: \"large\",\n    color: \"action\"\n  }))), __jsx(VolumeDown, {\n    className: styles.volume,\n    style: {\n      color: \"#fff\"\n    }\n  }), __jsx(Slider, {\n    className: styles.volumeMiddle,\n    value: SliderValue,\n    onChange: handleChange,\n    style: {\n      color: \"#fff\"\n    }\n  }), __jsx(VolumeUp, {\n    className: styles.volume,\n    style: {\n      color: \"#fff\"\n    }\n  })), __jsx(\"div\", {\n    className: styles.rightController\n  }, __jsx(IconButton, {\n    style: {\n      color: \"#fff\"\n    }\n  }, __jsx(ClosedCaptionIcon, {\n    fontSize: \"large\",\n    style: {\n      color: \"#fff\"\n    }\n  })), __jsx(IconButton, {\n    style: {\n      color: \"#fff\"\n    }\n  }, __jsx(CropFreeIcon, {\n    fontSize: \"large\",\n    style: {\n      color: \"#fff\"\n    }\n  })))), __jsx(\"div\", {\n    className: styles.videoMarker\n  }, __jsx(\"ul\", {\n    onMouseOver: handleOnMouseOver\n  }, __jsx(\"li\", {\n    className: styles.signup\n  }), __jsx(\"li\", {\n    className: styles.explore\n  }), __jsx(\"li\", {\n    className: styles.preview\n  }), __jsx(\"li\", {\n    className: styles.video\n  })), unFold ? __jsx(\"ul\", {\n    onMouseOut: function onMouseOut() {\n      return setUnfold(false);\n    },\n    className: styles.hidden\n  }, __jsx(\"li\", {\n    className: styles.signup\n  }, \"Signup\"), __jsx(\"li\", {\n    className: styles.explore\n  }, \"Explore\"), __jsx(\"li\", {\n    className: styles.preview\n  }, \"Course Preview\"), __jsx(\"li\", {\n    className: styles.video\n  }, \"Video & Markers\")) : null));\n};\n\n_s(VideoBox, \"a+7guinht73ofDSCLqIqknGsY9U=\", true);\n\n_c = VideoBox;\nexport default VideoBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoBox\");","map":{"version":3,"sources":["/Users/ericwang/Documents/workspace/basil/components/VideoBox/VideoBox.js"],"names":["buttonStyles","styles","React","ClosedCaptionIcon","CropFreeIcon","PlayArrowIcon","ReactPlayer","VolumeDown","VolumeUp","Grid","IconButton","Slider","makeStyles","VideoBox","useState","SliderValue","setSliderValue","unFold","setUnfold","useStyles","theme","root","color","classes","handleChange","newValue","handleOnMouseOver","videoWrapper","playController","playAndVolume","IconButtonLg","volume","volumeMiddle","rightController","videoMarker","signup","explore","preview","video","hidden"],"mappings":"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","sourcesContent":["import buttonStyles from \"../../styles/components/buttons.module.scss\";\nimport styles from \"./VideoBox.module.scss\";\nimport React from \"react\";\nimport ClosedCaptionIcon from \"@material-ui/icons/ClosedCaption\";\nimport CropFreeIcon from \"@material-ui/icons/CropFree\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport ReactPlayer from \"react-player/lazy\";\nimport VolumeDown from \"@material-ui/icons/VolumeDown\";\nimport VolumeUp from \"@material-ui/icons/VolumeUp\";\nimport { Grid, IconButton, Slider } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst VideoBox = () => {\n\tconst [SliderValue, setSliderValue] = useState(100);\n\tconst [unFold, setUnfold] = useState(false);\n\tconst useStyles = makeStyles((theme) => ({\n\t\troot: {\n\t\t\t\"& > svg\": {\n\t\t\t\tcolor: \"#fff\",\n\t\t\t},\n\t\t},\n\t}));\n\tconst classes = useStyles();\n\tconst handleChange = (newValue) => {\n\t\tsetSliderValue(newValue);\n\t};\n\tconst handleOnMouseOver = () => {\n\t\tsetUnfold(!unFold);\n\t};\n\n\treturn (\n\t\t<div className={styles.videoWrapper}>\n\t\t\t<div className=\"videoPlayBox\">\n\t\t\t\t<ReactPlayer\n\t\t\t\t\turl=\"https://youtu.be/xjadNS2HBpM\"\n\t\t\t\t\tclassName=\"player\"\n\t\t\t\t\twidth={\"100%\"}\n\t\t\t\t\theight={500}\n\t\t\t\t\tautoPlay={false}\n\t\t\t\t\tcontrols={true}\n\t\t\t\t\tvolume={1}\n\t\t\t\t\tmuted={false}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className={styles.playController}>\n\t\t\t\t<div className={styles.playAndVolume}>\n\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t<IconButton className={buttonStyles.IconButtonLg}>\n\t\t\t\t\t\t\t<PlayArrowIcon\n\t\t\t\t\t\t\t\tclassName={classes}\n\t\t\t\t\t\t\t\tfontSize=\"large\"\n\t\t\t\t\t\t\t\tcolor=\"action\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<VolumeDown className={styles.volume} style={{ color: \"#fff\" }} />\n\t\t\t\t\t<Slider\n\t\t\t\t\t\tclassName={styles.volumeMiddle}\n\t\t\t\t\t\tvalue={SliderValue}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tstyle={{ color: \"#fff\" }}\n\t\t\t\t\t/>\n\t\t\t\t\t<VolumeUp className={styles.volume} style={{ color: \"#fff\" }} />\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.rightController}>\n\t\t\t\t\t<IconButton style={{ color: \"#fff\" }}>\n\t\t\t\t\t\t<ClosedCaptionIcon fontSize=\"large\" style={{ color: \"#fff\" }} />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<IconButton style={{ color: \"#fff\" }}>\n\t\t\t\t\t\t<CropFreeIcon fontSize=\"large\" style={{ color: \"#fff\" }} />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={styles.videoMarker}>\n\t\t\t\t<ul onMouseOver={handleOnMouseOver}>\n\t\t\t\t\t<li className={styles.signup}></li>\n\t\t\t\t\t<li className={styles.explore}></li>\n\t\t\t\t\t<li className={styles.preview}></li>\n\t\t\t\t\t<li className={styles.video}></li>\n\t\t\t\t</ul>\n\t\t\t\t{unFold ? (\n\t\t\t\t\t<ul onMouseOut={() => setUnfold(false)} className={styles.hidden}>\n\t\t\t\t\t\t<li className={styles.signup}>Signup</li>\n\t\t\t\t\t\t<li className={styles.explore}>Explore</li>\n\t\t\t\t\t\t<li className={styles.preview}>Course Preview</li>\n\t\t\t\t\t\t<li className={styles.video}>Video & Markers</li>\n\t\t\t\t\t</ul>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default VideoBox;\n"]},"metadata":{},"sourceType":"module"}